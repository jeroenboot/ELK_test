input {
  udp {
    port => 5140
  }
}
filter {
  mutate { copy => { "@timestamp" => "timestampnew" } }
  mutate { convert => { "timestampnew" => "string" } }
  mutate { gsub => [ "timestampnew", "UTC", "" ] }
  date {
    match => [ "timestampnew" , "ISO8601" , "yyyyMMdd HH:mm:ss.SSS" ]
    target => "timestamp"
    locale => "en"
  }
  grok {
    match => [
      "message" , "%{SYSLOG5424PRI}%{GREEDYDATA:message}"
    ]
    overwrite => [ "message" ]
  }

  kv {
    source => "message"
    prefix => "PANICS_"
  }

  if[PANICS_srcip]{
    mutate {
      add_field => {"sourceip" => "%{PANICS_srcip}"}
    }
  }
  if[PANICS_dstip]{
    mutate {
      add_field => {"dstip" => "%{PANICS_dstip}"}
   }
  }
  if[PANICS_srcport]{
    mutate {
      add_field => {"sourceport" => "%{PANICS_srcport}"}
    }
  }
  if[PANICS_url]{
    mutate {
      add_field => {"request" => "%{PANICS_url}"}
    }
  }
  if [sourceip]{
    cidr {
      address => [ "%{sourceip}" ]
      network => [ "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.168.0.0/16", "240.0.0.0/4", "::1", "FE80::/10", "FF00::/8" ]
      add_field => {"iptype" => "privateip"}
    }
    if [sourceip] =~ /^\b(?:\d{1,3}.){3}\d{1,3}\b/ and "privateip" not in [iptype] {
      if [sourceip] !~ /^(0.0.0.0)/ {
        mutate { add_field => {"iptype" => "publicip"} }
        geoip {
         source => "sourceip"
       }
     }
    }
  }
  if [PANICS_msg]{
    mutate {
      add_tag => ["%{PANICS_msg}"]
    }
  }
}


output {
   elasticsearch {
   hosts => "http://elasticsearch:9200"
    index => "fortigate-%{+YYYY.MM}"
   user => "elastic"
   password => "password"
 }
}
